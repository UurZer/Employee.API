// <auto-generated />
using System;
using Employee.DataAccessLayer.DBContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Employee.API.Migrations
{
    [DbContext(typeof(EmployeeContext))]
    [Migration("20210607204711_updateMigration")]
    partial class updateMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Employee.API.DataAccess.DomainModel.Task", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CompleteTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("TaskDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaskTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = "d35ddfd6-84ef-4374-a8e1-f0454a8ad4bf",
                            CompleteTime = new DateTime(2021, 6, 7, 23, 47, 11, 106, DateTimeKind.Local).AddTicks(9645),
                            IsCompleted = true,
                            TaskDescription = "Code Refactor",
                            TaskTitle = "Code Refactor",
                            UserId = "1"
                        });
                });

            modelBuilder.Entity("Employee.DataAccessLayer.Employee", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = "31a0479c-8f92-441a-9f54-3eff79a09621",
                            Age = 50,
                            FirstName = "Selim",
                            LastName = "Öztekin"
                        },
                        new
                        {
                            Id = "495136f3-63de-49a9-9680-01e0bcd41a79",
                            Age = 50,
                            FirstName = "Oğuzhan",
                            LastName = "Aslan"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
